#########################################################################################
##  Build nvImageCodecs dependencies on top of manylinux2014
##  nvImageCodecs is based on "manylinux2014", official page https://github.com/pypa/manylinux
#########################################################################################
ARG FROM_IMAGE_NAME=quay.io/pypa/manylinux2014_x86_64
ARG BUILDER_EXTRA_DEPS=scratch
FROM ${BUILDER_EXTRA_DEPS} as extra_deps
FROM ${FROM_IMAGE_NAME}

# Install yum Dependencies
RUN yum install -y wget nasm doxygen graphviz gettext xz openssl autogen zip \
                   devtoolset-10-libasan-devel devtoolset-10-liblsan-devel \
                   devtoolset-10-libtsan-devel devtoolset-10-libubsan-devel \
                   dpkg dpkg-devel dpkg-dev
ENV ACLOCAL_PATH=/usr/share/aclocal/:/usr/local/share/aclocal

# Don't want the short-unicode version for Python 2.7
RUN rm -f /opt/python/cp27-cp27m

# patchelf Needed to patch rpath of dependencies in bundle-wheel.sh
RUN cd /tmp && export PATCHELF_VERSION=0.17.2 && export PATCHELF_ARCH=x86_64 && \
    wget https://github.com/NixOS/patchelf/releases/download/${PATCHELF_VERSION}/patchelf-${PATCHELF_VERSION}-${PATCHELF_ARCH}.tar.gz && \ 
    tar xzvf patchelf-${PATCHELF_VERSION}-${PATCHELF_ARCH}.tar.gz && \
    mv bin/patchelf /usr/local/bin/ && \
    cd

RUN export CMAKE_VERSION=3.24.1 \
      && wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.sh \
        -q -O /tmp/cmake-install.sh \
      && chmod u+x /tmp/cmake-install.sh \
      && mkdir /opt/cmake-3.24.1 \
      && /tmp/cmake-install.sh --skip-license --prefix=/opt/cmake-3.24.1 \
      && rm /tmp/cmake-install.sh \
      && rm -f /usr/local/bin/cmake \
      && rm -f /usr/local/bin/cpack \
      && rm -f /usr/local/bin/ctest \
      && ln -s /opt/cmake-3.24.1/bin/* /usr/local/bin

RUN export LIBJPEG_TURBO_VERSION=2.1.91 && cd /tmp && \
    wget https://github.com/libjpeg-turbo/libjpeg-turbo/archive/refs/tags/${LIBJPEG_TURBO_VERSION}.tar.gz && \
    tar xzvf ${LIBJPEG_TURBO_VERSION}.tar.gz && cd libjpeg-turbo-${LIBJPEG_TURBO_VERSION} && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=/usr/local -DENABLE_SHARED=FALSE -DENABLE_STATIC=TRUE && \
    make -j8 && make install && \
    cd && rm -rf /tmp/${LIBJPEG_TURBO_VERSION}.tar.gz /tmp/libjpeg-turbo-${LIBJPEG_TURBO_VERSION}

RUN export LIBTIFF_VERSION=4.5.0; cd /tmp && wget https://download.osgeo.org/libtiff/tiff-${LIBTIFF_VERSION}.tar.gz && \
    tar xzvf tiff-${LIBTIFF_VERSION}.tar.gz && cd tiff-${LIBTIFF_VERSION} && \
    mkdir rel_build && cd rel_build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local -Djbig=OFF .. && \
    make -j8 && make install && \
    cd && rm -rf /tmp/tiff-${LIBTIFF_VERSION}.tar.gz /tmp/tiff-${LIBTIFF_VERSION}

RUN export OPENCV_VERSION=4.7.0 && cd /tmp && \
    wget https://github.com/opencv/opencv/archive/refs/tags/${OPENCV_VERSION}.tar.gz && \
    tar xzvf ${OPENCV_VERSION}.tar.gz && cd opencv-${OPENCV_VERSION} && mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release \
      -DVIBRANTE_PDK:STRING=/ \
      -DCMAKE_INSTALL_PREFIX=/usr/local \
      -DBUILD_LIST=core,improc,imgcodecs \
      -DBUILD_SHARED_LIBS=OFF \
      -DWITH_ADE=OFF \
      -DWITH_CUDA=OFF \
      -DWITH_1394=OFF \
      -DWITH_IPP=OFF \
      -DWITH_OPENCL=OFF \
      -DWITH_GTK=OFF \
      -DBUILD_JPEG=OFF \
      -DWITH_JPEG=ON \
      -DBUILD_TIFF=OFF \
      -DWITH_TIFF=ON \
      -DBUILD_JASPER=OFF \
      -DBUILD_DOCS=OFF \
      -DBUILD_TESTS=OFF \
      -DBUILD_PERF_TESTS=OFF \
      -DBUILD_PNG=ON \
      -DWITH_WEBP=ON \
      -DBUILD_opencv_cudalegacy=OFF \
      -DBUILD_opencv_stitching=OFF \
      -DWITH_TBB=OFF \
      -DWITH_QUIRC=OFF \
      -DWITH_OPENMP=OFF \
      -DWITH_PTHREADS_PF=OFF \
      -DBUILD_EXAMPLES=OFF \
      -DBUILD_opencv_java=OFF \
      -DBUILD_opencv_python2=OFF \
      -DBUILD_opencv_python3=OFF \
      -DWITH_PROTOBUF=OFF \
      -DWITH_FFMPEG=OFF \
      -DWITH_GSTREAMER=OFF \
      -DWITH_GSTREAMER_0_10=OFF \
      -DWITH_VTK=OFF \
      -DWITH_OPENEXR=OFF \
      -DINSTALL_C_EXAMPLES=OFF \
      -DINSTALL_TESTS=OFF \
      -DVIBRANTE=TRUE \
      -DWITH_CSTRIPES=OFF \
      -DCMAKE_PREFIX_PATH=${INSTALL_PREFIX} \
      VERBOSE=1 .. && \
      make -j8 && make install && \
      cd && rm -rf /tmp/${OPENCV_VERSION}.tar.gz /tmp/opencv-${OPENCV_VERSION}

# Python
ARG PYVER=3.7
ARG PYV=37

ENV PYVER=${PYVER} PYV=${PYV} PYTHONPATH=/opt/python/v
ENV PYBIN=${PYTHONPATH}/bin \
    PYLIB=${PYTHONPATH}/lib

ENV PATH=/opt/python/cp36-cp36/bin:/opt/python/cp37-cp37m/bin:/opt/python/cp38-cp38/bin:/opt/python/cp39-cp39/bin:${PYBIN}:/opt/python/cp310-cp310/bin:/opt/python/cp311-cp311/bin:${PYBIN}:${PATH} \
    LD_LIBRARY_PATH=/usr/local/lib:/opt/nvimgcodecs/${NVIMGCODECS_BUILD_DIR}:/opt/python/cp36-cp36/lib:/opt/python/cp37-cp37m/lib:/opt/python/cp38-cp38/lib:/opt/python/cp39-cp39/lib:/opt/python/cp310-cp310/lib:/opt/python/cp311-cp311/lib:${PYLIB}:${LD_LIBRARY_PATH} \
    LIBRARY_PATH=/usr/local/lib:/opt/nvimgcodecs/${NVIMGCODECS_BUILD_DIR}:/opt/python/cp36-cp36/lib:/opt/python/cp37-cp37m/lib:/opt/python/cp38-cp38/lib:/opt/python/cp39-cp39/lib:/opt/python/cp310-cp310/lib:/opt/python/cp311-cp311/lib:${PYLIB}:${LIBRARY_PATH}

RUN ln -s /opt/python/cp${PYV}* /opt/python/v

# install Python bindings and patch it to use the clang we have here
RUN python -m pip install sphinx==4.5.0 sphinx_rtd_theme breathe future setuptools wheel clang==14.0 flake8 && \
    python -m pip install libclang==14.0.1 && \
    rm -rf /root/.cache/pip/

RUN ldconfig

# extra deps
COPY --from=extra_deps / /
