ARG BASE=nvidia/cuda:11.8.0-runtime-ubuntu20.04
FROM $BASE

ARG VER_CUDA=11.8.0
ARG VER_UBUNTU=20.04

# ENV VER_CUDA=${VER_CUDA}
# ENV VER_UBUNTU=${VER_UBUNTU}

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        python3 \
        python3-dev \
        python3-pytest \
        python3-pip \
        libglib2.0-0 \
        libgl1 \
        libgomp1 \
        pandoc \
        make \
        wget \
        doxygen \
        gcc \
        g++ \
    && rm -rf /var/lib/apt/lists/*

RUN CUDA_VERSION_MAJOR=$(echo "$VER_CUDA" | sed -E 's/^([0-9]+)\..*/\1/') && \
    python3 -m pip install \
    pytest \
    cupy-cuda${CUDA_VERSION_MAJOR}x \
    opencv-python \
    sphinx \
    sphinx_rtd_theme \
    breathe \
    nbsphinx \
    nbsphinx_link \
    ipython \
    ipykernel \
    matplotlib \
    opencv-python \
    numpy \
    scipy \
    scikit-image \
    pynvml && \
    rm -rf /root/.cache/pip

# Pytorch
RUN CUDA_VERSION_SHORT=$(echo "$VER_CUDA" | sed -E 's/^([0-9]+)\.([0-9]+)\..*/\1\2/') && \
    test $CUDA_VERSION_SHORT -gt 118 && \
        export PYTORCH_CU_VER=118 || \
        export PYTORCH_CU_VER=${CUDA_VERSION_SHORT}; \
    python3 -m pip install torch torchvision torchaudio \
        --index-url https://download.pytorch.org/whl/cu${PYTORCH_CU_VER}

# Tensorflow (only for CUDA 11.8)
RUN CUDA_VERSION_SHORT=$(echo "$VER_CUDA" | sed -E 's/^([0-9]+)\.([0-9]+)\..*/\1\2/') && \
    test $CUDA_VERSION_SHORT -eq 118 && \
        python3 -m pip install setuptools==59.5.0 && \
        python3 -m pip install tensorflow==2.13.* || \
        echo "Skipping tensorflow in this image, as it supports only CUDA 11.8"; \
    rm -rf /root/.cache/pip

WORKDIR /workspace
