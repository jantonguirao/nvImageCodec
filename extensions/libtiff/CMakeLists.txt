set(NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME libtiff_ext)

set(NVIMGCDCS_LIBTIFF_EXT_SRC
  libtiff_ext.cpp
  libtiff_decoder.cpp
  )


find_package(TIFF REQUIRED)
message("Using libtiff at ${TIFF_LIBRARY}")

include_directories(
  ../../include
  ../../src
  SYSTEM ../../external/NVTX/c/include
  SYSTEM ${TIFF_INCLUDE_DIR}
  SYSTEM ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}
  )

add_library(${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME} SHARED ${NVIMGCDCS_LIBTIFF_EXT_SRC} ext_module.cpp)
add_library(${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME}_static STATIC ${NVIMGCDCS_LIBTIFF_EXT_SRC})

target_link_libraries(${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME} PUBLIC ${TIFF_LIBRARY})

if(UNIX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -fvisibility=hidden")
  set_target_properties(${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    VERSION ${PROJECT_VERSION}
    SOVERSION ${PROJECT_VERSION_MAJOR})
else()
  set_target_properties(${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    VERSION ${PROJECT_VERSION}
    OUTPUT_NAME ${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME}_${PROJECT_VERSION_MAJOR}
    ARCHIVE_OUTPUT_NAME ${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME})
endif()

if(UNIX)
  install(TARGETS ${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME}
    LIBRARY DESTINATION plugins
    PUBLIC_HEADER DESTINATION include
  )

else()
  install(TARGETS ${NVIMGCDCS_LIBTIFF_EXT_LIBRARY_NAME}
    RUNTIME DESTINATION plugins
    LIBRARY DESTINATION lib64
    ARCHIVE DESTINATION lib64
    PUBLIC_HEADER DESTINATION include
  )
endif()
