set(NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME opencv_ext)

set(NVIMGCODEC_LIBJPEG_TURBO_EXT_SRC
  opencv_ext.cpp
  opencv_decoder.cpp
  )

add_library(${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME} SHARED ${NVIMGCODEC_LIBJPEG_TURBO_EXT_SRC} ext_module.cpp)
add_library(${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME}_static STATIC ${NVIMGCODEC_LIBJPEG_TURBO_EXT_SRC})

target_link_libraries(${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME} PUBLIC ${OpenCV_LIBRARIES})

if(UNIX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -fvisibility=hidden")
  set_target_properties(${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    VERSION ${PROJECT_VERSION}
    NO_SONAME OFF)
else()
  set_target_properties(${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    VERSION ${PROJECT_VERSION}
    OUTPUT_NAME ${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME}_${PROJECT_VERSION_MAJOR}
    ARCHIVE_OUTPUT_NAME ${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME})
endif()

if(UNIX)
  install(TARGETS ${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME} ${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME}_static
    LIBRARY DESTINATION extensions NAMELINK_SKIP COMPONENT lib
    ARCHIVE DESTINATION lib64 COMPONENT lib
    PUBLIC_HEADER DESTINATION include COMPONENT lib
  )

else()
  install(TARGETS ${NVIMGCODEC_OPENCV_EXT_LIBRARY_NAME}
    RUNTIME DESTINATION extensions COMPONENT lib
    LIBRARY DESTINATION lib64 COMPONENT lib
    ARCHIVE DESTINATION lib64 COMPONENT lib
    PUBLIC_HEADER DESTINATION include COMPONENT lib
  )
endif()
