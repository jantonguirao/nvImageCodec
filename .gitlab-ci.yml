image: nvidia/cuda:11.8.0-runtime-ubuntu20.04

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 20
    WITH_DYNAMIC_NVJPEG: "ON"

stages:
    - build
    - test
    - deploy

.build:
    stage: build
    tags:
        - cuda
        - docker

.build:nvimagecodec:
    extends: .build
    artifacts:
        paths:
            - artifacts/
            - docs/sphinx/_build/html
        expire_in: 2 weeks
    script:
        - mkdir -p artifacts
        - export WHL_OUTDIR=$PWD/artifacts
        - mkdir -p build_docker
        - cd build_docker
        - source ../docker/build_helper.sh

build:cuda11.8:
    extends: .build:nvimagecodec
    variables:
        WITH_DYNAMIC_NVJPEG: "OFF"
    image: gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/builder-cuda-11.8-x86_64:v7

build:cuda12.3:
    extends: .build:nvimagecodec
    image: gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/builder-cuda-12.3-x86_64:v7

build:cuda11.8-gcc9:
    extends: .build:nvimagecodec
    variables:
        WITH_DYNAMIC_NVJPEG: "OFF"
    when: manual
    image: gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/builder-cuda-11.8-gcc9-x86_64:v7

.test:
    stage: test
    tags:
        - cuda
        - docker

.test:nvimagecodec:
    extends: .test
    script:
        - nvidia-smi
        - export CUDA_VERSION_MAJOR=$(echo "${CI_JOB_NAME}" | sed 's/.*cuda\([0-9]*\).*/\1/')
        - dpkg -i artifacts/nvimgcodec-*-cuda${CUDA_VERSION_MAJOR}*lib.deb
        - dpkg -i artifacts/nvimgcodec-*-cuda${CUDA_VERSION_MAJOR}*tests.deb
        - /opt/nvidia/nvimgcodec_cuda${CUDA_VERSION_MAJOR}/test/nvimgcodec_tests --resources_dir /opt/nvidia/nvimgcodec_cuda${CUDA_VERSION_MAJOR}/resources

.test:python:
    extends: .test
    script:
        - nvidia-smi
        - export CUDA_VERSION_MAJOR=$(echo "${CI_JOB_NAME}" | sed 's/.*cuda\([0-9]*\).*/\1/')
        - python3 -m pip install artifacts/nvidia_nvimgcodec_cu${CUDA_VERSION_MAJOR}-*.whl
        - pytest-3 -v -s test/python --ignore=test/python/integration
        - pytest-3 -v -s test/python/integration/test_dlpack_cupy.py

.test:transcode:
    extends: .test
    script:
        - nvidia-smi
        - export CUDA_VERSION_MAJOR=$(echo "${CI_JOB_NAME}" | sed 's/.*cuda\([0-9]*\).*/\1/')
        - dpkg -i artifacts/nvimgcodec-*-cuda${CUDA_VERSION_MAJOR}*lib.deb
        - dpkg -i artifacts/nvimgcodec-*-cuda${CUDA_VERSION_MAJOR}*tests.deb
        - pytest-3 -v /opt/nvidia/nvimgcodec_cuda${CUDA_VERSION_MAJOR}/test/test_transcode.py

test:cuda11.3:
    extends: .test:nvimagecodec
    image: nvidia/cuda:11.3.1-runtime-ubuntu20.04
    dependencies:
        - build:cuda11.8

test:cuda11.8:
    extends: .test:nvimagecodec
    image: nvidia/cuda:11.8.0-runtime-ubuntu20.04
    dependencies:
        - build:cuda11.8

test:cuda12.1:
    extends: .test:nvimagecodec
    image: nvidia/cuda:12.1.1-runtime-ubuntu20.04
    dependencies:
        - build:cuda12.3

test:python-cuda11.3:
    extends: .test:python
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-11.3-x86_64:v7
    dependencies:
        - build:cuda11.8

test:python-cuda11.8:
    extends: .test:python
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-11.8-x86_64:v7
    dependencies:
        - build:cuda11.8

test:python-cuda12.1:
    extends: .test:python
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-12.1-x86_64:v7
    dependencies:
        - build:cuda12.3

test:python-integration-tensorflow:
    extends: .test
    image:  nvcr.io/nvidia/tensorflow:23.10-tf2-py3
    dependencies:
        - build:cuda12.3
    script:
        - nvidia-smi
        - python3 -m pip install pytest
        - python3 -m pip install artifacts/nvidia_nvimgcodec_cu12-*.whl
        - pytest -v -s test/python/integration/test_dlpack_tensorflow.py

test:python-integration-pytorch:
    extends: .test
    image:  nvcr.io/nvidia/pytorch:23.10-py3
    dependencies:
        - build:cuda12.3
    script:
        - nvidia-smi
        - python3 -m pip install artifacts/nvidia_nvimgcodec_cu12-*.whl
        - pytest -v -s test/python/integration/test_dlpack_torch.py

test:transcode-cuda11.3:
    extends: .test:transcode
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-11.3-x86_64:v7
    dependencies:
        - build:cuda11.8

test:transcode-cuda11.8:
    extends: .test:transcode
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-11.8-x86_64:v7
    dependencies:
        - build:cuda11.8

test:transcode-cuda12.1:
    extends: .test:transcode
    image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/runner-cuda-12.1-x86_64:v7
    dependencies:
        - build:cuda12.3

# Documentation jobs
include: '.gitlab/ci/build_docs.yml'
