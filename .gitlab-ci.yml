image:  gitlab-master.nvidia.com:5005/cuda-hpc-libraries/nvimagecodec/build-linux-x64:ubuntu-20.04-cuda-11.8-v5

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 20
    DEPENDENCIES_DIR: "$CI_PROJECT_DIR/.dependencies"
    CMAKE_URL: "https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz"
    CMAKE_ROOT: "$CI_PROJECT_DIR/.dependencies/cmake"
    GTEST_GIT_URL: "https://github.com/google/googletest.git"
    GTEST_TAG: "release-1.10.0"
    GTEST_SOURCE_ROOT: "$CI_PROJECT_DIR/.dependencies/googletest"
    GTEST_ROOT: "$CI_PROJECT_DIR/.dependencies/gtest"
    GCC_URL: "http://ftp.gnu.org/gnu/gcc/gcc-9.4.0/gcc-9.4.0.tar.gz"
    GCC_DIR: "$CI_PROJECT_DIR/.dependencies/gcc"

before_script:
  - export CUDACXX=nvcc

.build:
    stage: build
    tags:
        - docker
        - cuda

.build:nvimagecodec:
    extends: .build
    artifacts:
        paths:
            - build/python/*.whl
            - build/*.tar.gz
        expire_in: 2 weeks

build:nvimagecodec:
    extends: .build:nvimagecodec

    script:
        # Get build type
        - source .gitlab/ci/build_type.sh
        # Build
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=${NVIMAGECODEC_BUILD_TYPE} ../.
        - nice -n 19 make -j8
        - make wheel
        - cpack --config CPackConfig.cmake -DCMAKE_BUILD_TYPE=${NVIMAGECODEC_BUILD_TYPE}
        - nvidia-smi
        - ctest --verbose


# Documentation jobs
# include: '.gitlab/ci/build_docs.yml'

